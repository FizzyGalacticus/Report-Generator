#ifndef MALWARE_WINDOW_CPP
#define MALWARE_WINDOW_CPP
#include "mainwindow.h"
#include <QHBoxLayout>
#include <QVBoxLayout>
#include <QSpacerItem>

void MainWindow::_setupMalwareWindow()
{
    //Main Malware Window
    //_malwareWindow = new QDialog(this);
    this->setWindowTitle("Malware");
    this->setMinimumSize(560,333);
    this->setFocusPolicy(Qt::StrongFocus);

    //Malware List View
    _setupMalwareListView();

    //Accept Button
    _malwareWindowAcceptButton = new QPushButton(this);
    _malwareWindowAcceptButton->setText("Accept");
    _malwareWindowAcceptButton->setMaximumSize(50,25);
    connect(_malwareWindowAcceptButton,SIGNAL(clicked()),this,SLOT(_malwareWindowAcceptButtonHasBeenClicked()));

    //Malwarebytes
    _removedWithMalwarebytesInput = new QLineEdit(this);
    _removedWithMalwarebytesInput->setValidator(new QIntValidator(this));
    _removedWithMalwarebytesInput->setText("How many objects were removed with MalwareBytes?");
    _removedWithMalwarebytesInput->setCursorPosition(0);
    _removedWithMalwarebytesInput->show();

    //Avast
    _removedWithAvastInput = new QLineEdit(this);
    _removedWithAvastInput->setValidator(new QIntValidator(this));
    _removedWithAvastInput->setText("How many objects were removed with Avast?");
    _removedWithAvastInput->setCursorPosition(0);
    _removedWithAvastInput->show();

    //_malwareWindow->show();


    _removedWithMalwarebytesInput->selectAll();
    _removedWithMalwarebytesInput->setFocus();

    QWidget * malwareCentralWidget = new QWidget(this);

    QHBoxLayout * mainLayout = new QHBoxLayout;
    QVBoxLayout * antiVirusLayout = new QVBoxLayout;
    QHBoxLayout * spacerLayout = new QHBoxLayout;

    spacerLayout->addStretch();
    spacerLayout->addWidget(_malwareWindowAcceptButton);

    antiVirusLayout->addWidget(_removedWithMalwarebytesInput);
    antiVirusLayout->addWidget(_removedWithAvastInput);
    antiVirusLayout->addStretch();
    antiVirusLayout->addLayout(spacerLayout);

    mainLayout->addWidget(_malwareListView);
    mainLayout->addLayout(antiVirusLayout);
    malwareCentralWidget->setLayout(mainLayout);
    this->setCentralWidget(malwareCentralWidget);
}

void MainWindow::_malwareButtonHasBeenClicked()
{
    //this->hide();
    _setupMalwareWindow();
}

void MainWindow::_malwareWindowAcceptButtonHasBeenClicked()
{
    if(_removedWithMalwarebytesInput->text() != "How many objects were removed with MalwareBytes?") _removedWithMalwarebytes = _removedWithMalwarebytesInput->text().toInt();
    if(_removedWithAvastInput->text() != "How many objects were removed with Avast?") _removedWithAvast = _removedWithAvastInput->text().toInt();
    //delete _malwareWindow;
    _generateReport();
    this->setCentralWidget(_centralWidget);
}

void MainWindow::_setupMalwareListView()
{
    _malwareListView = new QListWidget(this);

    const QVector<QString> * malwarelist = _getTextFromDatabase("removedprograms");

    for(int i = 0; i < malwarelist->size(); i++)
    {
        _malwareListView->addItem(malwarelist->at(i));
        _malwareListView->item(i)->setTextColor("Black");
    }

    for(int i = 0; i < _currentlySelectedMalware->count(); i++)
        for(int j = 0; j < _malwareListView->count(); j++)
            if(_currentlySelectedMalware->at(i) == _malwareListView->item(j)->text())
                _malwareListView->item(j)->setTextColor("Red");

    _malwareListView->addItem("Add Item");
    connect(_malwareListView,SIGNAL(itemDoubleClicked(QListWidgetItem*)),this,SLOT(_malwareListViewItemHasBeenDoubleClicked(QListWidgetItem*)));
}

void MainWindow::_malwareListViewItemHasBeenDoubleClicked(QListWidgetItem *item)
{
    if(item != _malwareListView->item(_malwareListView->count()-1))
    {
        if(_currentlySelectedMalware->contains(item->text()))
        {
            item->setTextColor("Black");
            _currentlySelectedMalware->removeAt(_currentlySelectedMalware->indexOf(item->text()));
        }
        else
        {
            item->setTextColor("Red");
            _currentlySelectedMalware->append(item->text());
        }

        _currentlySelectedMalware->sort();
    }
    else
    {
        QString malware = getUserInputString(this,"Removed Malware","Removed Malware:");
        if(malware.size())
        {
            _addTextToDatabase(malware,QString("removedprograms"));
            _malwareListView->item(_malwareListView->count()-1)->setText(malware);

            _malwareListView->sortItems();
            _malwareListView->show();

            for(int i = 0; i < _malwareListView->count(); i++)
                if(_malwareListView->item(i)->text() == malware)
                {
                    _malwareListView->setItemSelected(_malwareListView->item(i), true);
                    _malwareListView->item(i)->setTextColor("Red");
                    _currentlySelectedMalware->append(_malwareListView->item(i)->text());
                    break;
                }

            _malwareListView->addItem(QString("Add Item"));
            _malwareListView->item(_malwareListView->count()-1)->setTextColor("Black");
        }
    }
}

#endif
